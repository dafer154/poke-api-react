{"version":3,"sources":["components/Pokemon.js","actions/pokeActions.js","actions/types.js","reducers/pokeReducer.js","reducers/index.js","store.js","components/Search.js","components/PokeCard.js","components/PokemonContainer.js","components/Landing.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Pokemon","this","props","fetchPokemon","match","params","id","pokemon","className","name","src","alt","base_experience","height","weight","to","Component","connect","state","pokemones","dispatch","axios","get","then","resp","type","payload","data","catch","err","console","log","initialState","textSearch","pokeReducer","action","statePokemones","filteredPokemones","filter","toLowerCase","indexOf","text","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Search","onChange","e","target","value","searchPokemon","onSubmit","preventDefault","placeholder","results","PokeCard","idpokemon","url","replace","urlImagePokemon","PokemonContainer","fetchPokemones","map","key","Landing","Navbar","Footer","href","rel","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.27d3976f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPokemon } from '../actions/pokeActions';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles/Pokemon.css';\r\n\r\n\r\nexport class Pokemon extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPokemon(this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        const { pokemon } = this.props\r\n\r\n        return (\r\n            <div className=\"pokemonDetail\">\r\n                <div className=\"titlePokemon\"><h2>{pokemon.name}</h2></div>\r\n\r\n                <div className=\"wrap-pokemon\">\r\n                    <div className=\"pokeCard\">\r\n                        <div className=\"wrap-image\">\r\n                            <img className=\"sizeImage\" src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`} alt=\"pokemon Cover\" />\r\n                            <h1 className=\"numberPokemon\">#{pokemon.id}</h1>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"textPokemon\">\r\n                        <div className=\"wrapDescription\">\r\n                            <span className=\"mainSpan\">Habilities:</span>\r\n                            {/* {pokemon.abilities.map(poke => {\r\n                                return <div><span>{poke.ability.name}</span></div>\r\n                            })} */}\r\n                        </div>\r\n                        <div className=\"wrapDescription\">\r\n                            <span className=\"mainSpan\">Experience:</span><span>{pokemon.base_experience}{\" \"}<i className=\"fas fa-bolt fa-1x\"></i></span>\r\n                        </div>\r\n                        <div className=\"wrapDescription\">\r\n                            <span className=\"mainSpan\">Height:</span><span>{pokemon.height}{\" \"}<i className=\"fas fa-dumbbell\"></i></span>\r\n                        </div>\r\n                        <div className=\"wrapDescription\">\r\n                            <span className=\"mainSpan\">Weight:</span><span>{pokemon.weight}{\" \"}<i className=\"fas fa-weight-hanging\"></i></span>\r\n                        </div>\r\n                        <div className=\"wrapDescription\">\r\n                            <span className=\"mainSpan\">Types:</span>\r\n                            {/* {pokemon.types.map(poke => <div><span>{poke.type.name}</span></div>)} */}\r\n                        </div>\r\n                        <Link className=\"btn btn-primary\" to=\"/\">\r\n                            Back\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemon: state.pokemones.pokemon\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPokemon })(Pokemon);\r\n\r\n","import { SEARCH_POKEMON, FETCH_POKEMON, FETCH_POKEMONES } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const searchPokemon = text => dispatch =>{\r\n    const url = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=806';\r\n    \r\n    axios.get(`${url}`)\r\n        .then(resp => {\r\n            dispatch({\r\n                type: SEARCH_POKEMON,\r\n                text: text,\r\n                payload: resp.data.results\r\n            })\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchPokemones = () => dispatch =>{\r\n    const url = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=151';\r\n\r\n    axios.get(`${url}`)\r\n        .then(resp => {\r\n            dispatch({\r\n                type: FETCH_POKEMONES,\r\n                payload: resp.data.results\r\n            })\r\n        }).catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchPokemon = id => dispatch =>{\r\n    const url = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\n    axios.get(`${url}/${id}`)\r\n        .then(resp => {\r\n            dispatch({\r\n                type: FETCH_POKEMON,\r\n                payload: resp.data\r\n            })\r\n        }).catch(err => console.log(err))\r\n}","export const SEARCH_POKEMON = 'SEARCH_POKEMON';\r\nexport const FETCH_POKEMONES = 'FETCH_POKEMONES';\r\nexport const FETCH_POKEMON = 'FETCH_POKEMON';","import { SEARCH_POKEMON, FETCH_POKEMON, FETCH_POKEMONES } from '../actions/types';\r\n\r\nconst initialState = {\r\n    textSearch: '',\r\n    pokemones: [],\r\n    pokemon: {}\r\n}\r\n\r\nconst pokeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEARCH_POKEMON:\r\n            const statePokemones = action.payload;\r\n            const filteredPokemones = statePokemones.filter(pokemon => {\r\n                return pokemon.name.toLowerCase().indexOf(action.text.toLowerCase()) !== -1;\r\n              });\r\n            return {\r\n                ...state,\r\n                textSearch: action.text,\r\n                pokemones: filteredPokemones\r\n            }\r\n        case FETCH_POKEMONES:\r\n            return {\r\n                ...state,\r\n                pokemones: action.payload\r\n            }\r\n        case FETCH_POKEMON:\r\n            return {\r\n                ...state,\r\n                pokemon: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pokeReducer","import {combineReducers} from 'redux';\r\nimport pokeReducer from './pokeReducer';\r\n\r\nexport default combineReducers({\r\n    pokemones: pokeReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { searchPokemon } from '../actions/pokeActions';\r\nimport './styles/Search.css';\r\n\r\nexport class Search extends Component {\r\n    onChange = e => {\r\n        const text = e.target.value;\r\n        this.props.searchPokemon(text);\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"display-4 mb-3\">\r\n                            <i className=\"fa fa-search\" /> Search Pokemon\r\n          </h1>\r\n                        <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"searchText\"\r\n                                placeholder=\"Search Pokemon ...\"\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n                                Search\r\n            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.pokemones.textSearch\r\n})\r\n\r\nexport default connect(mapStateToProps, { searchPokemon })(Search);\r\n","import React from 'react'\r\nimport './styles/PokeCard.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst PokeCard = ({pokemon}) => {\r\n\r\n\r\n    const urlImagePokemon = url =>{\r\n        let urlImagePokemon = 'https://pokeres.bastionbot.org/images/pokemon/'\r\n        let deleteURL = url.replace('https://pokeapi.co/api/v2/pokemon/', '');\r\n        let id = deleteURL.replace('/','');\r\n        return `${urlImagePokemon}${id}.png`;\r\n    }\r\n\r\n    const idpokemon = url =>{\r\n        let deleteURL = url.replace('https://pokeapi.co/api/v2/pokemon/', '');\r\n        let id = deleteURL.replace('/','');\r\n        return id\r\n    }\r\n\r\n    return (\r\n        <div className=\"pokeCard\">\r\n            <p>{pokemon.name}</p>\r\n            <div className=\"wrap-image\">\r\n              <img className=\"sizeImage\" src={urlImagePokemon(pokemon.url)} alt=\"pokemon Cover\" />  \r\n            </div>\r\n            <div>\r\n            <h1>#{idpokemon(pokemon.url)}</h1>\r\n            </div>\r\n            <Link className=\"btn btn-primary\" to={`/pokemon/${idpokemon(pokemon.url)}`}>\r\n                    Pokemon Details\r\n                </Link>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeCard\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fetchPokemones} from '../actions/pokeActions';\r\nimport PokeCard from '../components/PokeCard';\r\nimport './styles/PokemonContainer.css';\r\n\r\nexport class PokemonContainer extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.fetchPokemones();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {pokemones} = this.props\r\n        \r\n        return (\r\n            <div className='pokedex'>\r\n                {pokemones.map(pokemon =>{\r\n                    return <PokeCard pokemon={pokemon} key={pokemon.name}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemones: state.pokemones.pokemones\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchPokemones})(PokemonContainer)\r\n","import React, { Component } from 'react'\r\nimport Search from './Search';\r\nimport PokemonContainer from './PokemonContainer'\r\n\r\nexport class Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search />\r\n                <PokemonContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = () =>{\r\n    return(\r\n        <div>\r\n        <nav className=\"navbar navbar-light bg-dark mb-5\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-header\">\r\n              <Link className=\"navbar-brand text-white text-lg brand-text\" to=\"/\">\r\n                <h1>PokeAPI</h1>\r\n              </Link>\r\n            </div>\r\n            <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n              <li className=\"nav-item d-inline-block mr-4\">\r\n                <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Footer = () =>{\r\n    return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n                Developed By:\r\n                <span className=\"text-warning font-weight-normal\">\r\n                  David Zuluaga\r\n                </span>\r\n                , Using <i className=\"fab fa-react\" /> React JS &amp; Redux JS\r\n                integrated with external pokemon data API {''}\r\n                <a\r\n                  href=\"http://https://pokeapi.co/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  POKE-API \r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Pokemon from './components/Pokemon';\nimport store from './store';\nimport Landing from './components/Landing';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\nexport class App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/pokemon/:id\" component={Pokemon} />\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}